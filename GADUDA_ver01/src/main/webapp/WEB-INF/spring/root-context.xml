<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSource">

		<property value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" name="driverClassName" />

		<property value="jdbc:log4jdbc:oracle:thin:@192.168.1.25:1521:orcl"
			name="url" />

		<property value="yongjin" name="username" />

		<property value="1234" name="password" />

	</bean>


	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">

		<property name="dataSource" ref="dataSource" />
		<property value="classpath:/mybatis-config.xml" name="configLocation" />

		<!-- 등록한 매퍼 이용 -->
		<property name="mapperLocations" value="classpath:/mapper/**/*Mapper.xml" />

	</bean>

	<!-- clearCache : bean이 사라질떄 사용했던 cache들을 날려준다. -->
	<!-- SqlSessionTemplate은 실제 쿼리를 실행시키기위해 만듬 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>

	<!-- base-package를 기준으로 모든 하위 패키지안에 있는 클래스를 자동으로 Bean으로 등록 -->
	<!-- 단, @Repository나 @Service등 Annotation이 붙은 클래스만 등록 -->
	<context:component-scan base-package="kr.co.gaduda"></context:component-scan>
	
	
	<!-- aop 설정하기 -->
	
	
	<!-- 트랜잭션 매니저 정의 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		
		<property name="dataSource" ref="dataSource"/>	
	</bean>
	
	<!-- @Transactional 어노테이션 검색 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	
	
		
</beans>
